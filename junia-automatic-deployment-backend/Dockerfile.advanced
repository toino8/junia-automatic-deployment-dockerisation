# Étape 1 : Construction de l'image uv_image
FROM ghcr.io/astral-sh/uv:latest as uv_image

# Étape 2 : Construire l'image finale en partant de python:3.12-slim
FROM python:3.12-slim

# Copier l'exécutable 'uv' depuis l'étape précédente
COPY --from=uv_image /usr/local/bin/uv /usr/local/bin/uv

# Copier les fichiers de l'application
COPY main.py /main.py
COPY config ./config
COPY routes ./routes
COPY pyproject.toml .
COPY uv.lock .

# Utiliser les montées de volumes (caches, etc.) pour exécuter `uv sync`
RUN --mount=type=cache,target=/root/.cache/uv \
    --mount=type=bind,source=uv.lock,target=uv.lock \
    --mount=type=bind,source=pyproject.toml,target=pyproject.toml \
    uv sync --frozen --no-install-project --no-editable

# Exposer le port 8501
EXPOSE 8501

# Commande par défaut pour lancer l'application
CMD [ "uv", "run", "-m", "uvicorn", "main:app", "--host", "0.0.0.0", "--port", "8000" ]

# Créer un utilisateur non-root (facultatif)
ARG USERNAME=nonroot
ARG USER_UID=65532
ARG USER_GID=$USER_UID

RUN groupadd --gid $USER_GID $USERNAME \
 && useradd --uid $USER_UID --gid $USER_GID -m $USERNAME
